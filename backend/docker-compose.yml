version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: threads_postgres
    environment:
      POSTGRES_DB: threads_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - threads_network

 # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: threads_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - threads_network

  # Redis for caching (optional, for future use)
  redis:
    image: redis:7-alpine
    container_name: threads_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - threads_network

  # Auth Service
  auth-service:
    build: ./auth-service
    container_name: threads_auth_service
    environment:
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=threads_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - JWT_SECRET=your-super-secret-jwt-key-here
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    networks:
      - threads_network

 # Threads Service
  threads-service:
    build: ./threads-service
    container_name: threads_threads_service
    environment:
      - PORT=3002
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=threads_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - AUTH_SERVICE_URL=http://auth-service:3001
    ports:
      - "3002:3002"
    depends_on:
      - postgres
      - rabbitmq
      - auth-service
    networks:
      - threads_network

 # Follow Service
  follow-service:
    build: ./follow-service
    container_name: threads_follow_service
    environment:
      - PORT=3003
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=threads_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - AUTH_SERVICE_URL=http://auth-service:3001
    ports:
      - "3003:3003"
    depends_on:
      - postgres
      - auth-service
    networks:
      - threads_network

# API Gateway
  api-gateway:
    build: ./api-gateway
    container_name: threads_api_gateway
    environment:
      - PORT=3000
      - AUTH_SERVICE_URL=http://auth-service:3001
      - THREADS_SERVICE_URL=http://threads-service:3002
      - FOLLOW_SERVICE_URL=http://follow-service:3003
    ports:
      - "3000:3000"
    depends_on:
      - auth-service
      - threads-service
      - follow-service
    networks:
      - threads_network

volumes:
  postgres_data:
  rabbitmq_data:
  redis_data:

networks:
  threads_network:
    driver: bridge